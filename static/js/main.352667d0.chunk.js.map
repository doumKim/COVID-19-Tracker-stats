{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image (1).png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","console","error","fetchDailyData","map","confirmed","deaths","date","reportDate","total","fetchCountries","countries","name","Chart","recovered","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","pointBorderWidth","barChart","backgroundColor","value","options","legend","display","title","text","className","styles","container","Cards","lastUpdate","updateDate","Date","toDateString","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","variant","start","end","duration","separator","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","InputLabel","Select","defaultValue","onChange","e","target","MenuItem","i","key","App","setData","setCountry","fetchInitialData","titleImg","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.352667d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\tlet changeableUrl = url;\n\n\tif (country) {\n\t\tchangeableUrl = `${url}/countries/${country}`;\n\t}\n\n\ttry {\n\t\tconst { data } = await axios.get(changeableUrl);\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/daily`);\n\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\n\t\t\tconfirmed: confirmed.total,\n\t\t\tdeaths: deaths.total,\n\t\t\tdate,\n\t\t}));\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nexport const fetchCountries = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/countries`);\n\t\treturn data.countries.map((country) => country.name);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [dailyData, setDailyData] = useState({});\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tconst initialDailyData = await fetchDailyData();\n\n\t\t\tsetDailyData(initialDailyData);\n\t\t};\n\n\t\tfetchAPI();\n\t}, []);\n\n\tconst lineChart = dailyData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#bac8ff',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tpointBorderWidth: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: '#ffd8a8',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tpointBorderWidth: 1,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst barChart = confirmed ? (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels: ['Infected', 'Recoverd', 'Deaths'],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: ['#bac8ff', '#d3f9d8', '#ffd8a8'],\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tlegend: { display: false },\n\t\t\t\ttitle: { display: true, text: `Current state in  ${country}` },\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\treturn (\n\t\t<div className={styles.container}>{country ? barChart : lineChart}</div>\n\t);\n};\n\nexport default Chart;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport cx from 'classnames';\nimport CountUp from 'react-countup';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\tif (!confirmed) {\n\t\treturn 'Loading.....';\n\t}\n\n\tconst updateDate = new Date(lastUpdate).toDateString();\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textPrimary\">확진자 수</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={confirmed.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator={','}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{updateDate}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\tNumber of active case of COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textPrimary\">완치자 수</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={recovered.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator={','}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{updateDate}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\tNumber of recoveries from COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textPrimary\">사망자 수</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={deaths.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator={','}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{updateDate}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\tNumber of deaths causedd by COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [countries, setCountries] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetCountries(await fetchCountries());\n\t\t};\n\t\tfetchAPI();\n\t}, []);\n\n\treturn (\n\t\t<FormControl className={styles.formControl}>\n\t\t\t<InputLabel>Country</InputLabel>\n\t\t\t<Select\n\t\t\t\tdefaultValue=\"\"\n\t\t\t\tonChange={(e) => handleCountryChange(e.target.value)}\n\t\t\t>\n\t\t\t\t<MenuItem value=\"\">Global</MenuItem>\n\t\t\t\t{countries.map((country, i) => (\n\t\t\t\t\t<MenuItem value={country} key={i}>\n\t\t\t\t\t\t{country}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t</FormControl>\n\t);\n};\n\nexport default CountryPicker;\n","import React, { useEffect, useState } from 'react';\nimport { Chart, Cards, CountryPicker } from './components';\nimport { fetchData } from './api';\n\nimport styles from './App.module.css';\nimport titleImg from './images/image (1).png';\n\nconst App = () => {\n\tconst [data, setData] = useState({});\n\tconst [country, setCountry] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchInitialData = async () => {\n\t\t\tconst data = await fetchData();\n\t\t\tsetData(data);\n\t\t};\n\t\tfetchInitialData();\n\t}, []);\n\n\tconst handleCountryChange = async (country) => {\n\t\tconst data = await fetchData(country);\n\t\tsetData(data);\n\t\tsetCountry(country);\n\t};\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<img className={styles.titleImg} src={titleImg} alt=\"COVID-19 Title\" />\n\t\t\t<Cards data={data} />\n\t\t\t<CountryPicker\n\t\t\t\tcountry={country}\n\t\t\t\thandleCountryChange={handleCountryChange}\n\t\t\t/>\n\t\t\t<Chart data={data} country={country} />\n\t\t\t<p>01064117723</p>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"titleImg\":\"App_titleImg__20H07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2vyxG\",\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image (1).d7265326.png\";"],"sourceRoot":""}